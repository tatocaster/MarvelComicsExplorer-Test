apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "me.tatocaster.marvelapp"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher"
            ]
        }

        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher"
            ]
        }

        buildTypes.each {
            it.buildConfigField "String", "MARVEL_PUBLIC", getSecureKey("MARVEL_PUBLIC_KEY")
            it.buildConfigField "String", "MARVEL_PRIVATE", getSecureKey("MARVEL_PRIVATE_KEY")
        }

    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:2.0.1'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$supportVersion"

    // 3rd part libs
    api 'io.reactivex.rxjava2:rxjava:2.1.5'
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'
    api "com.google.dagger:dagger:${daggerVersion}"
    api 'com.squareup.okhttp3:okhttp:3.8.1'
    api 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    api 'com.squareup.retrofit2:retrofit:2.3.0'
    api 'com.squareup.retrofit2:converter-gson:2.3.0'
    api 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    // Litho
    implementation "com.facebook.litho:litho-core:${lithoVersion}"
    implementation "com.facebook.litho:litho-widget:${lithoVersion}"
    implementation "com.facebook.litho:litho-annotations:${lithoVersion}"
    implementation 'com.github.pavlospt:litho-glide:1.2'

    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
    kapt "com.facebook.litho:litho-annotations:${lithoVersion}"
    kapt "com.facebook.litho:litho-processor:${lithoVersion}"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}


static def getSecureKey(String property) {
    Properties properties = new Properties()
    properties.load(new FileInputStream("secrets.properties"))
    return "\"" + properties.getProperty(property) + "\""
}